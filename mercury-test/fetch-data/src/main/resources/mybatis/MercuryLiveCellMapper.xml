<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.nervos.mercury.fetch.data.mapper.MercuryLiveCellMapper">
  <resultMap id="BaseResultMap" type="org.nervos.mercury.fetch.data.entity.MercuryLiveCell">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="output_index" jdbcType="INTEGER" property="outputIndex" />
    <result column="tx_index" jdbcType="INTEGER" property="txIndex" />
    <result column="block_number" jdbcType="INTEGER" property="blockNumber" />
    <result column="epoch_number" jdbcType="INTEGER" property="epochNumber" />
    <result column="epoch_index" jdbcType="INTEGER" property="epochIndex" />
    <result column="epoch_length" jdbcType="INTEGER" property="epochLength" />
    <result column="capacity" jdbcType="BIGINT" property="capacity" />
    <result column="lock_script_type" jdbcType="SMALLINT" property="lockScriptType" />
    <result column="type_script_type" jdbcType="SMALLINT" property="typeScriptType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.nervos.mercury.fetch.data.entity.MercuryLiveCell">
    <result column="tx_hash" jdbcType="BLOB" property="txHash" />
    <result column="block_hash" jdbcType="BLOB" property="blockHash" />
    <result column="lock_hash" jdbcType="BLOB" property="lockHash" />
    <result column="lock_code_hash" jdbcType="BLOB" property="lockCodeHash" />
    <result column="lock_args" jdbcType="BLOB" property="lockArgs" />
    <result column="type_hash" jdbcType="BLOB" property="typeHash" />
    <result column="type_code_hash" jdbcType="BLOB" property="typeCodeHash" />
    <result column="type_args" jdbcType="BLOB" property="typeArgs" />
    <result column="data" jdbcType="BLOB" property="data" />
  </resultMap>
  <sql id="Base_Column_List">
    id, output_index, tx_index, block_number, epoch_number, epoch_index, epoch_length, 
    capacity, lock_script_type, type_script_type
  </sql>
  <sql id="Blob_Column_List">
    tx_hash, block_hash, lock_hash, lock_code_hash, lock_args, type_hash, type_code_hash, 
    type_args, data
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mercury_live_cell
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mercury_live_cell
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.nervos.mercury.fetch.data.entity.MercuryLiveCell">
    insert into mercury_live_cell (id, output_index, tx_index, 
      block_number, epoch_number, epoch_index, 
      epoch_length, capacity, lock_script_type, 
      type_script_type, tx_hash, block_hash, 
      lock_hash, lock_code_hash, lock_args, 
      type_hash, type_code_hash, type_args, 
      data)
    values (#{id,jdbcType=BIGINT}, #{outputIndex,jdbcType=INTEGER}, #{txIndex,jdbcType=INTEGER}, 
      #{blockNumber,jdbcType=INTEGER}, #{epochNumber,jdbcType=INTEGER}, #{epochIndex,jdbcType=INTEGER}, 
      #{epochLength,jdbcType=INTEGER}, #{capacity,jdbcType=BIGINT}, #{lockScriptType,jdbcType=SMALLINT}, 
      #{typeScriptType,jdbcType=SMALLINT}, #{txHash,jdbcType=BLOB}, #{blockHash,jdbcType=BLOB}, 
      #{lockHash,jdbcType=BLOB}, #{lockCodeHash,jdbcType=BLOB}, #{lockArgs,jdbcType=BLOB}, 
      #{typeHash,jdbcType=BLOB}, #{typeCodeHash,jdbcType=BLOB}, #{typeArgs,jdbcType=BLOB}, 
      #{data,jdbcType=BLOB})
  </insert>
  <insert id="insertSelective" parameterType="org.nervos.mercury.fetch.data.entity.MercuryLiveCell">
    insert into mercury_live_cell
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="outputIndex != null">
        output_index,
      </if>
      <if test="txIndex != null">
        tx_index,
      </if>
      <if test="blockNumber != null">
        block_number,
      </if>
      <if test="epochNumber != null">
        epoch_number,
      </if>
      <if test="epochIndex != null">
        epoch_index,
      </if>
      <if test="epochLength != null">
        epoch_length,
      </if>
      <if test="capacity != null">
        capacity,
      </if>
      <if test="lockScriptType != null">
        lock_script_type,
      </if>
      <if test="typeScriptType != null">
        type_script_type,
      </if>
      <if test="txHash != null">
        tx_hash,
      </if>
      <if test="blockHash != null">
        block_hash,
      </if>
      <if test="lockHash != null">
        lock_hash,
      </if>
      <if test="lockCodeHash != null">
        lock_code_hash,
      </if>
      <if test="lockArgs != null">
        lock_args,
      </if>
      <if test="typeHash != null">
        type_hash,
      </if>
      <if test="typeCodeHash != null">
        type_code_hash,
      </if>
      <if test="typeArgs != null">
        type_args,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="outputIndex != null">
        #{outputIndex,jdbcType=INTEGER},
      </if>
      <if test="txIndex != null">
        #{txIndex,jdbcType=INTEGER},
      </if>
      <if test="blockNumber != null">
        #{blockNumber,jdbcType=INTEGER},
      </if>
      <if test="epochNumber != null">
        #{epochNumber,jdbcType=INTEGER},
      </if>
      <if test="epochIndex != null">
        #{epochIndex,jdbcType=INTEGER},
      </if>
      <if test="epochLength != null">
        #{epochLength,jdbcType=INTEGER},
      </if>
      <if test="capacity != null">
        #{capacity,jdbcType=BIGINT},
      </if>
      <if test="lockScriptType != null">
        #{lockScriptType,jdbcType=SMALLINT},
      </if>
      <if test="typeScriptType != null">
        #{typeScriptType,jdbcType=SMALLINT},
      </if>
      <if test="txHash != null">
        #{txHash,jdbcType=BLOB},
      </if>
      <if test="blockHash != null">
        #{blockHash,jdbcType=BLOB},
      </if>
      <if test="lockHash != null">
        #{lockHash,jdbcType=BLOB},
      </if>
      <if test="lockCodeHash != null">
        #{lockCodeHash,jdbcType=BLOB},
      </if>
      <if test="lockArgs != null">
        #{lockArgs,jdbcType=BLOB},
      </if>
      <if test="typeHash != null">
        #{typeHash,jdbcType=BLOB},
      </if>
      <if test="typeCodeHash != null">
        #{typeCodeHash,jdbcType=BLOB},
      </if>
      <if test="typeArgs != null">
        #{typeArgs,jdbcType=BLOB},
      </if>
      <if test="data != null">
        #{data,jdbcType=BLOB},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.nervos.mercury.fetch.data.entity.MercuryLiveCell">
    update mercury_live_cell
    <set>
      <if test="outputIndex != null">
        output_index = #{outputIndex,jdbcType=INTEGER},
      </if>
      <if test="txIndex != null">
        tx_index = #{txIndex,jdbcType=INTEGER},
      </if>
      <if test="blockNumber != null">
        block_number = #{blockNumber,jdbcType=INTEGER},
      </if>
      <if test="epochNumber != null">
        epoch_number = #{epochNumber,jdbcType=INTEGER},
      </if>
      <if test="epochIndex != null">
        epoch_index = #{epochIndex,jdbcType=INTEGER},
      </if>
      <if test="epochLength != null">
        epoch_length = #{epochLength,jdbcType=INTEGER},
      </if>
      <if test="capacity != null">
        capacity = #{capacity,jdbcType=BIGINT},
      </if>
      <if test="lockScriptType != null">
        lock_script_type = #{lockScriptType,jdbcType=SMALLINT},
      </if>
      <if test="typeScriptType != null">
        type_script_type = #{typeScriptType,jdbcType=SMALLINT},
      </if>
      <if test="txHash != null">
        tx_hash = #{txHash,jdbcType=BLOB},
      </if>
      <if test="blockHash != null">
        block_hash = #{blockHash,jdbcType=BLOB},
      </if>
      <if test="lockHash != null">
        lock_hash = #{lockHash,jdbcType=BLOB},
      </if>
      <if test="lockCodeHash != null">
        lock_code_hash = #{lockCodeHash,jdbcType=BLOB},
      </if>
      <if test="lockArgs != null">
        lock_args = #{lockArgs,jdbcType=BLOB},
      </if>
      <if test="typeHash != null">
        type_hash = #{typeHash,jdbcType=BLOB},
      </if>
      <if test="typeCodeHash != null">
        type_code_hash = #{typeCodeHash,jdbcType=BLOB},
      </if>
      <if test="typeArgs != null">
        type_args = #{typeArgs,jdbcType=BLOB},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=BLOB},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.nervos.mercury.fetch.data.entity.MercuryLiveCell">
    update mercury_live_cell
    set output_index = #{outputIndex,jdbcType=INTEGER},
      tx_index = #{txIndex,jdbcType=INTEGER},
      block_number = #{blockNumber,jdbcType=INTEGER},
      epoch_number = #{epochNumber,jdbcType=INTEGER},
      epoch_index = #{epochIndex,jdbcType=INTEGER},
      epoch_length = #{epochLength,jdbcType=INTEGER},
      capacity = #{capacity,jdbcType=BIGINT},
      lock_script_type = #{lockScriptType,jdbcType=SMALLINT},
      type_script_type = #{typeScriptType,jdbcType=SMALLINT},
      tx_hash = #{txHash,jdbcType=BLOB},
      block_hash = #{blockHash,jdbcType=BLOB},
      lock_hash = #{lockHash,jdbcType=BLOB},
      lock_code_hash = #{lockCodeHash,jdbcType=BLOB},
      lock_args = #{lockArgs,jdbcType=BLOB},
      type_hash = #{typeHash,jdbcType=BLOB},
      type_code_hash = #{typeCodeHash,jdbcType=BLOB},
      type_args = #{typeArgs,jdbcType=BLOB},
      data = #{data,jdbcType=BLOB}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.nervos.mercury.fetch.data.entity.MercuryLiveCell">
    update mercury_live_cell
    set output_index = #{outputIndex,jdbcType=INTEGER},
      tx_index = #{txIndex,jdbcType=INTEGER},
      block_number = #{blockNumber,jdbcType=INTEGER},
      epoch_number = #{epochNumber,jdbcType=INTEGER},
      epoch_index = #{epochIndex,jdbcType=INTEGER},
      epoch_length = #{epochLength,jdbcType=INTEGER},
      capacity = #{capacity,jdbcType=BIGINT},
      lock_script_type = #{lockScriptType,jdbcType=SMALLINT},
      type_script_type = #{typeScriptType,jdbcType=SMALLINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>