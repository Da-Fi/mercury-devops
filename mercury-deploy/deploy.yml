---
- name: start mercury service
  hosts: localhost
  #become: yes
  #become_method: sudo
  vars_files:
    - config.yml
  tasks:
    - name: Pull code
      git:
        repo: "{{ mercury_repo }}"
        dest: "{{ deploy_path }}"
        version: "{{ mercury_version }}"
        force: yes
      become: yes
      become_method: sudo
    
    - name: Copy the docker configuration file for the test network
      shell: cp -r templates/docker-compose-test.yml.j2  {{ deploy_path }}/docker-compose.yml
      become: yes
      become_method: sudo
      when: net_type == "testnet"
    - name: Copy the docker configuration file for the main network
      shell: cp -r templates/docker-compose-main.yml.j2  {{ deploy_path }}/docker-compose.yml
      become: yes
      become_method: sudo
      when: net_type == "mainnet"     

    - name: Copy the mercury configuration file for the test network
      shell: cp -r templates/testnet_config.toml.j2  {{ deploy_path }}/devtools/config/testnet_config.toml
      become: yes
      become_method: sudo
      when: net_type == "testnet"
    - name: Copy the mercury configuration file for the main network
      shell: cp -r templates/mainnet_config.toml.j2  {{ deploy_path }}/devtools/config/mainnet_config.toml
      become: yes
      become_method: sudo
      when: net_type == "mainnet"    
      
    - name: copy pgsql config
      shell: cp -r templates/my-postgres.conf  {{ deploy_path }}/devtools/my-postgres.conf
      become: yes
      become_method: sudo
      
    - name: Check if the process exists
      shell: ps -ef | grep mercury | grep {{ kill_name }} | grep -v grep | awk '{print $2}'
      register: process_exists
    - name: Shutdown 
      shell: cd {{ deploy_path }} && docker-compose down
      when: process_exists.stdout != ""

    - name: Build 
      shell: cd {{ deploy_path }} && docker-compose build
    - name: Clear build images
      shell: docker rmi $(docker images | awk '/^<none>/ { print $3 }')
      ignore_errors: yes

    - name: Start mercury
      shell: cd {{ deploy_path }} && docker-compose up -d

    - name: pause for 30 seconds 
      pause:
      seconds: 30  

    - name: chmod pg data
      shell: "chmod 777 {{ deploy_path }}/pg_data/data"
      become: yes
      become_method: sudo
    - name: chmod pg log
      shell: "chmod 777 {{ deploy_path }}/pg_data/data/log"
      become: yes
      become_method: sudo